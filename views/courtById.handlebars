<section class="court-details">
    <h1>NYC Court Finder</h1>
    <div id="court-info">
        <p id="court-title">Court: {{courtName}}&nbsp;&nbsp; | &nbsp;&nbsp;Address: {{address}} &nbsp;&nbsp;| &nbsp;&nbsp;Rating: <span id="overall-rating">{{overallRating}}</span>/5</p>
    </div>
    <div id="map">
        <iframe width="600" height="450" style="border:0" loading="lazy" allowfullscreen referrerpolicy="no-referrer-when-downgrade" src="https://www.google.com/maps/embed/v1/place?key=AIzaSyDFFwqO140DVnI3leB_luDuu3133GDLfaI&q={{latitude}},{{longitude}}"></iframe>
    </div>
</section>
<p id="disclaimer">Disclaimer: The pickup games listed on this website are organized and managed entirely by the users. The developers of this website are not responsible for any events or activities that take place as a result of the information provided on this website. We provide this information solely as a service to our users, and it is up to each individual to determine whether or not to participate in any pickup games listed on this website. Any decision to participate in such games is entirely at the individual's own risk and discretion. The developers of this website assume no responsibility for any injuries, damages, or other consequences that may arise from participation in pickup games listed on this website. By using this website, you agree to these terms and conditions.
  </p>
  {{#if user}}
  <button class="create-game-btn" onclick="location.href='http://localhost:3000/game/{{courtId}}'">
    Create Pick-Up Game
  </button>
  {{else}}
  <p>Registered users can create pick up games. Already registered? Please login</p>
  {{/if}}
    <div id="pick-up-games">
        {{#each pickUpGames}}
    <div class="full-game-wrapper">
        <div class="game-wrapper">
            <p>Date: {{this.date}}</p>
            <p>Time: {{this.time}}</p>
            <p>Max Players: {{this.maxPlayers}}</p>
            <p>Players Joined: {{this.gameMembers.length}}</p>
            {{!-- todo players needed  --}}
            <button class="gameButton" onclick="location.href='http://localhost:3000/game/gameDetails/{{this._id}}'">Game Details</button>
        </div>
    </div> 
  {{/each}}
    </div>
<div class="spacer"></div>
<div id="courtReviews">
<h2>Court Reviews</h2>
  {{#if user}}
  <div id="error-message" hidden></div>
  <div class="game-wrapper">
  <form id="reviewForm">
    <div class="input-group mb-3">
      <label for="courtReview">Review</label>
      <input type="text" id="courtReview" name="courtReview" placeholder="Write a review here" required maxlength="280">
      <br>
      <label class="input-group-text" for="inputGroupSelect01">Rating</label>
      <select class="form-select" id="inputGroupSelect01" name="rating" required>
        <option value="">Give a rating</option>
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5">5</option>
      </select>
    </div>
    <button type="submit" class="button">Submit review</button>
  </form>
  </div>
  {{else}}
  <p>Registered users can write reviews. Already registered? Please login</p>
  {{/if}}
  <hr>
  <ul id="reviews-list">
    {{#each reviews}}
    <li>
      <h3>{{this.fullName}}</h3>
      <p>Rating: {{this.rating}}/5</p>
      <p>{{this.comment}}</p>
      {{#if this.isOwner}}
      <button class="joinButton">Delete Review</button>
      {{/if}}
    </li>
    {{/each}}
  </ul>
  <hr>
</div>
<script>


const reviewForm = document.getElementById("reviewForm");
const reviewsList = document.getElementById("reviews-list");

//event listener for before ajax delete button
    reviewsList.addEventListener("click", function(event) {
  if (event.target.classList.contains("delete-comment")) {
    event.preventDefault(); 

    fetch("/courts/{{courtId}}/review/delete", {
        method: "DELETE",
        headers: {
            "Content-Type": "application/json"
        }
    }).then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    }).then(courtDetails => {
        console.log(courtDetails.reviews);

        // Reload the page
        window.location.reload();
    }).catch(error => {
        console.log("Error deleting review:", error);
    });
  }
});


reviewForm.addEventListener("submit", function(event) {
  event.preventDefault(); 

  const reviewData = {
    courtReview: document.getElementById("courtReview").value,
    rating: document.getElementById("inputGroupSelect01").value
  }

  console.log(reviewData)

  fetch("/courts/{{courtId}}/review", {
    method: "POST",
    headers: {
        "Content-Type": "application/json"
    },
    body: JSON.stringify(reviewData)
  })
  .then(response => {
    if (!response.ok) {
      if (response.status === 400) {
        response.json().then(data => {
          const errorMessage = document.getElementById("error-message");
          errorMessage.innerHTML = data.error;
          errorMessage.hidden = false;
          errorMessage.style.color = 'red';
        });
      } else {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
    }
    return response.json();
  })
  .then(courtDetails => {
    console.log(courtDetails.reviews)
    let reviews = courtDetails.reviews
    let review
for (let i = 0; i < reviews.length; i++) {
  if (reviews[i].isOwner === true) {
    // Found the object with isOwner set to true
    console.log(reviews[i]);
    review = reviews[i]
    break;
  }
}
    
  const overallRatingSpan = document.getElementById("overall-rating");
  overallRatingSpan.textContent = courtDetails.overallRating;

    //end
    const reviewItem = document.createElement("li");
    const reviewHeading = document.createElement("h3");
    const reviewRating = document.createElement("p");
    const reviewComment = document.createElement("p");
    //delete button
    const deleteReviewBtn = document.createElement("button");
    deleteReviewBtn.textContent = "Delete Review";
    deleteReviewBtn.classList.add("delete-review-btn");
    deleteReviewBtn.dataset.reviewId = review._id;

    reviewHeading.innerHTML = `<p>${review.fullName}</p>`;
    reviewRating.textContent = `Rating: ${review.rating}/5`;
    reviewComment.textContent = review.comment;
    reviewCommentDeleteLink = `/courts/${courtDetails._id}/review`
    reviewItem.appendChild(reviewHeading);
    reviewItem.appendChild(reviewRating);
    reviewItem.appendChild(reviewComment);
    reviewItem.appendChild(deleteReviewBtn);
    reviewsList.appendChild(reviewItem);
  })
  .catch(error => {
    console.log("Error submitting review:", error);
  });
//post ajax event listener for delete
  reviewsList.addEventListener("click", function(event) {
  if (event.target.classList.contains("delete-review-btn")) {
    
    event.preventDefault(); 
    // Send a DELETE request to the server to delete the review with the given ID

    fetch("/courts/{{courtId}}/review/delete", {
        method: "DELETE",
        headers: {
            "Content-Type": "application/json"
        }
    }).then(response => {
        if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    }).then(courtDetails => {
      console.log(courtDetails.reviews);

      // Reload the page
      window.location.reload();
    })
    .catch(error => {
      console.log("Error deleting review:", error);
    });
  }
});
});

</script>